// setup-telegram.js - –°–∫—Ä–∏–ø—Ç –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Telegram webhook
require('dotenv').config();

const TELEGRAM_BOT_TOKEN = process.env.TELEGRAM_BOT_TOKEN;
const WEBHOOK_URL = `https://YOUR_NGROK_URL_HERE/api/telegram-webhook`; // –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à ngrok URL

async function setupTelegramWebhook() {
  try {
    console.log('üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Telegram webhook...');
    console.log('ü§ñ Bot token:', TELEGRAM_BOT_TOKEN ? '—É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω' : '–ù–ï –£–°–¢–ê–ù–û–í–õ–ï–ù');
    console.log('üåê Webhook URL:', WEBHOOK_URL);
    
    if (!TELEGRAM_BOT_TOKEN) {
      console.error('‚ùå TELEGRAM_BOT_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ .env —Ñ–∞–π–ª–µ');
      return;
    }

    if (WEBHOOK_URL.includes('YOUR_NGROK_URL_HERE')) {
      console.error('‚ùå –ó–∞–º–µ–Ω–∏—Ç–µ YOUR_NGROK_URL_HERE –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π ngrok URL');
      return;
    }
    
    // –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–π webhook
    console.log('üóëÔ∏è –£–¥–∞–ª–µ–Ω–∏–µ —Å—Ç–∞—Ä–æ–≥–æ webhook...');
    const deleteResponse = await fetch(`https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/deleteWebhook`);
    const deleteResult = await deleteResponse.json();
    console.log('–£–¥–∞–ª–µ–Ω–∏–µ webhook:', deleteResult);
    
    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–æ–≤—ã–π webhook
    console.log('‚öôÔ∏è –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–æ–≤–æ–≥–æ webhook...');
    const setResponse = await fetch(`https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/setWebhook`, {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({
        url: WEBHOOK_URL,
        allowed_updates: ['callback_query', 'message']
      })
    });
    
    const result = await setResponse.json();
    console.log('–£—Å—Ç–∞–Ω–æ–≤–∫–∞ webhook:', result);
    
    if (result.ok) {
      console.log('‚úÖ Webhook —É—Å–ø–µ—à–Ω–æ –Ω–∞—Å—Ç—Ä–æ–µ–Ω!');
      console.log(`üìç URL: ${WEBHOOK_URL}`);
    } else {
      console.error('‚ùå –û—à–∏–±–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ webhook:', result.description);
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ webhook
    console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ webhook...');
    const infoResponse = await fetch(`https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/getWebhookInfo`);
    const webhookInfo = await infoResponse.json();
    console.log('–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ webhook:', JSON.stringify(webhookInfo.result, null, 2));
    
  } catch (error) {
    console.error('üí• –û—à–∏–±–∫–∞:', error);
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –±–æ—Ç–∞
async function testBot() {
  try {
    console.log('\nüß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –±–æ—Ç–∞...');
    
    const response = await fetch(`https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/getMe`);
    const botInfo = await response.json();
    
    if (botInfo.ok) {
      console.log('‚úÖ –ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç:', botInfo.result.username);
      console.log('üìù –ò–º—è –±–æ—Ç–∞:', botInfo.result.first_name);
    } else {
      console.error('‚ùå –û—à–∏–±–∫–∞ –±–æ—Ç–∞:', botInfo.description);
    }
    
  } catch (error) {
    console.error('üí• –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:', error);
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
async function sendTestMessage() {
  try {
    console.log('\nüì® –û—Ç–ø—Ä–∞–≤–∫–∞ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è...');
    
    const testMessage = `
ü§ñ *–¢–µ—Å—Ç —Å–∏—Å—Ç–µ–º—ã —Å–æ–≥–ª–∞—Å–æ–≤–∞–Ω–∏—è NDA*

–ë–æ—Ç —É—Å–ø–µ—à–Ω–æ –Ω–∞—Å—Ç—Ä–æ–µ–Ω –∏ –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!

–í—Ä–µ–º—è: ${new Date().toLocaleString('ru-RU')}
    `;
    
    const response = await fetch(`https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/sendMessage`, {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({
        chat_id: process.env.TELEGRAM_CHAT_ID,
        text: testMessage,
        parse_mode: 'Markdown'
      })
    });
    
    const result = await response.json();
    
    if (result.ok) {
      console.log('‚úÖ –¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!');
    } else {
      console.error('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏:', result.description);
      console.error('üí° –ü—Ä–æ–≤–µ—Ä—å—Ç–µ TELEGRAM_CHAT_ID –≤ .env —Ñ–∞–π–ª–µ');
    }
    
  } catch (error) {
    console.error('üí• –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è:', error);
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫—É
async function main() {
  console.log('üöÄ –ù–∞—á–∏–Ω–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫—É Telegram...');
  
  if (!process.env.TELEGRAM_CHAT_ID) {
    console.error('‚ùå TELEGRAM_CHAT_ID –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ .env —Ñ–∞–π–ª–µ');
    console.log('üí° –ù–∞–ø–∏—à–∏—Ç–µ –±–æ—Ç—É –≤ Telegram, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å chat_id');
    return;
  }
  
  await testBot();
  await setupTelegramWebhook();
  
  console.log('\nüìã –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:');
  console.log('1. –ó–∞–ø—É—Å—Ç–∏—Ç–µ ngrok: npx ngrok http 3001');
  console.log('2. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ HTTPS URL –∏–∑ ngrok');
  console.log('3. –ó–∞–º–µ–Ω–∏—Ç–µ YOUR_NGROK_URL_HERE –≤ —ç—Ç–æ–º —Ñ–∞–π–ª–µ');
  console.log('4. –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–Ω–æ–≤–∞: node setup-telegram.js');
}

main();